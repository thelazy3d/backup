# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[virtual_sdcard]
path: ~/printer_data/gcodes     ##~/gcode_files

[display_status]

[palette2]
serial: /dev/serial/by-id/usb-FTDI_FT230X_Basic_UART_DM02HU9A-if00-port0
#   The serial port to connect to the Palette 2.
baud: 115200
#   The baud rate to use. The default is 115200.
feedrate_splice: 0.8
#   The feedrate to use when splicing, default is 0.8
feedrate_normal: 1.0
#   The feedrate to use after splicing, default is 1.0
auto_load_speed: 2
#   Extrude feedrate when autoloading, default is 2 (mm/s)
auto_cancel_variation: 0.1
#   Auto cancel print when ping varation is above this threshold
# This file contains all settings for KAMP, and must be included in printer.cfg with:

##[include KAMP_Settings.cfg]

### The following [includes] can be uncommented from within KAMP_Settings.cfg. ###

# This file enables the use of adaptive meshing.

##[include Adaptive_Meshing.cfg]

# This file enables the use of adaptive line purging.

##[include Line_Purge.cfg]

# This file enables the use of the adaptive Voron logo purge.

##[include Voron_Purge.cfg]

# This file enables the use of KAMP's Smart Park feature.

##[include ./KAMP/Smart_Park.cfg]
##[include spoolmanager.cfg]
##[include spoolmon.cfg]
##[include timelapse.cfg]
##[include ./Demon_Essentials_Unified/*.cfg]
##[include klicky-probe.cfg]
[include led_progress.cfg]
[include nitehawk-sb.cfg]
[include tacho_macros.cfg]
[include beacon.cfg]
[include beeper.cfg]
[include shake&tune.cfg]
[include heat_soak.cfg]
[include TEST_SPEED.cfg]
[include led_effects.cfg]
##[include autoz.cfg]
[include pa_cal.cfg]
##[include runout.cfg]
[include lcd.cfg]
[include display_menu.cfg]
[include load and unload.cfg]
[exclude_object]
##[include frame_expansion_compensation.cfg]
[thermistor winnsinn NTC100K B3950]
## values calibrated against a PT100 reference
temperature1: 25.0
resistance1: 103180.0
temperature2: 150.0
resistance2: 1366.2
temperature3: 250.0
resistance3: 168.6

[temperature_sensor Chamber_Temp]
sensor_type: winnsinn NTC100K B3950
sensor_pin: nhk:gpio28
min_temp: 0
max_temp: 100
gcode_id: C

[gcode_macro TOGGLE_BEEPER]
description: Toggle the printer beeper on and off.

gcode:
	  {% set beeper_state = printer.save_variables.variables.beeper_state|lower %}

	  {% if printer['gcode_macro _USER_VARIABLE'].debug == 1 %}
		{action_respond_info('==== TOGGLE_BEEPER ====')}
		{action_respond_info("beeper_state: %s" % (beeper_state))}
		{action_respond_info('===============')}
	  {% endif %}

	  {% if beeper_state == "off" %}
		{action_respond_info('beeper is off, turning it on')}
		SAVE_VARIABLE VARIABLE=beeper_state VALUE='"on"'
	  {% else %}
		{action_respond_info('beeper is on= turning it off')}
		SAVE_VARIABLE VARIABLE=beeper_state VALUE='"off"'
	  {% endif %}
	SONG_SINGLE_BEEP

[output_pin beep]
## PE8 for Octopus/Octopuspron or PC9 for spider1/2.2 Boards
#pin: PC9
pin: PE8
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001 #   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz

[pause_resume]
recover_velocity: 50

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="smartplug",
                             state="off")}

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

[idle_timeout]
gcode:
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=500

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

  TURN_OFF_HEATERS
  M107f
  CANCEL_PRINT_BASE


[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_1C004D000A51373330333137-if00
restart_method: command
##--------------------------------------------------------------------
[mcu rpi]
serial: /tmp/klipper_host_mcu                         # old value changed 06/12/23  /tmp/klipper_host_mcu

[input_shaper]
shaper_freq_x: 92.6
shaper_type_x: 2hump_ei
shaper_freq_y: 44.6
shaper_type_y: mzv

##[adxl345]
##cs_pin: rpi:None

##[resonance_tester]
##accel_chip: beacon
##probe_points:
  ##  90, 90, 20  # an example
##max_smoothing:0.096

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 10000             #Max 4000
minimum_cruise_ratio: 0.5
#   Most moves will accelerate to a cruising speed, travel at that
#   cruising speed, and then decelerate. However, some moves that
#   travel a short distance could nominally accelerate and then
#   immediately decelerate. This option reduces the top speed of these
#   moves to ensure there is always a minimum distance traveled at a
#   cruising speed. That is, it enforces a minimum distance traveled
#   at cruising speed relative to the total distance traveled. It is
#   intended to reduce the top speed of short zigzag moves (and thus
#   reduce printer vibration from these moves). For example, a
#   minimum_cruise_ratio of 0.5 would ensure that a standalone 1.5mm
#   move would have a minimum cruising distance of 0.75mm. Specify a
#   ratio of 0.0 to disable this feature (there would be no minimum
#   cruising distance enforced between acceleration and deceleration).
#   The value specified here may be changed at runtime using the
#   SET_VELOCITY_LIMIT command. The default is 0.5.
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 128
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 85   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
#hold_current: 0.7
#sense_resistor: 0.110

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 128
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 250mm build
#position_endstop: 250
#position_max: 250

##  Uncomment for 300mm build
#position_endstop: 300
#position_max: 300

##  Uncomment for 350mm build
position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 85  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
#hold_current: 0.7
#sense_resistor: 0.110
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 128
endstop_pin: probe:z_virtual_endstop  ##PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 0.425
##--------------------------------------------------------------------

##  Uncomment below for 250mm build
#position_max: 230

##  Uncomment below for 300mm build
#position_max: 280

##  Uncomment below for 350mm build
position_max: 330
position_min: -5

##--------------------------------------------------------------------
position_min: -5
homing_speed: 10  ## prior was 8
second_homing_speed: 3
homing_retract_dist: 0

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 128

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 128

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 128

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110


[safe_z_home]
home_xy_position: 175,175
speed: 75
z_hop: 10
z_hop_speed: 20
move_to_previous: false

#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: nhk:gpio23
dir_pin: nhk:gpio24
enable_pin: !nhk:gpio25
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance:  13.380581149         ## changed from 22.6789511 on 01-28-25 #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:17               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: nhk:gpio9
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: winnsinn NTC100K B3950
sensor_pin: nhk:gpio29
min_temp: 10
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.144
#pid_ki = 1.529
#pid_kd = 111.765
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.015
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 5

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: nhk:gpio0
interpolate: false
run_current: 0.5
hold_current: 0.4
sense_resistor: 0.100
tx_pin: nhk:gpio1

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
##  Uncomment the following line if using the default SSR wiring from the docs site
#heater_pin: PA3
##  Other wiring guides may use BED_OUT to control the SSR. Uncomment the following line for those cases
heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
#control = pid
#pid_kp = 37.378
#pid_ki = 1.318
#pid_kd = 264.918

#####################################################################
#   Probe
#####################################################################

##[probe]
##pin: PG11
##x_offset: 0
##y_offset: 19.75
#z_offset: 9.000    ##changed from 6.42 on 06-24-23
##speed: 5  ##prior 5
##samples: 3 
##samples_result: median
##sample_retract_dist: 2.0
##samples_tolerance: 0.0100
##samples_tolerance_retries: 3

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: nhk:gpio6
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10
tachometer_pin: nhk:gpio17

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: nhk:gpio5
max_power: 1.0
shutdown_speed: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 45.0
tachometer_pin: nhk:gpio16
tachometer_ppr: 2
##  If you are experiencing back flow, you can reduce fan_speed
##fan_speed: 0.7

[heater_fan Electronics_fan1]
##  Controller fan - FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0
shutdown_speed: 1.0

[heater_fan electronics_fan2]
##  Controller fan - FAN2
pin: PD14
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0
shutdown_speed: 1.0

##[fan_generic chamber]
##  Exhaust fan - FAN3
#pin: PD14
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0


[fan_generic Nevermore]
##  Controller fan - FAN2
pin: PD15
max_power: 1.0
shutdown_speed: 1.0
kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 110.0
#fan_speed: 0.8
#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
#[output_pin caselight]
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

##[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
##home_xy_position:231,350
##speed:100
##z_hop:10

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

#--------------------------------------------------------------------
##  Gantry Corners for 250mm Build
##  Uncomment for 250mm build
#gantry_corners:
#   -60,-10
#   310, 320
##  Probe points
#points:
#   50,25
#   50,175
#   200,175
#   200,25
    
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
#gantry_corners:
#   -60,-10
#   360,370
##  Probe points
#points:
#   50,25
#   50,225
#   250,225
#   250,25

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 750
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075  ##was 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##  RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=0 GREEN=1 BLUE=0 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=0 GREEN=1 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=0 GREEN=1 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

#####################################################################
# 	LCD Menu
#####################################################################   

[menu __main __control __runoutonoff]
type: input
enable: {'filament_motion_sensor btt_sensor' in printer.configfile.settings}
name: Runout: {'ON ' if menu.input else 'OFF'}
input: 0
input_min: 0
input_max: 1
input_step: 1
index: 4
##gcode:
  
#####################################################################
#   Macros
#####################################################################


[gcode_macro CLEAN_NOZZLE_PARK]
gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}

  G90
  G1 X325 Y350 Z6 F6000

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[delayed_gcode delayed_printer_off]
initial_duration: 1800
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

  [gcode_macro SET_FILAMENT_SENSOR]
    gcode:
    SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE={menu.input|int}
[idle_timeout]
gcode:
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=1800

[gcode_macro RUNOUT_INFO]
gcode:
  {% if 'filament_motion_sensor runout' in printer.configfile.settings %}
    #{% set enable = printer['filament_motion_sensor btt_sensor'].enabled %}
    #{% set detect = printer['filament_motion_sensor btt_sensor'].filament_detected %}
    {% set enable = true %}
    {% set detect = true %}
    {action_respond_info("RUNOUT Motion Sensor:
                          Enabled: %s
                          Detect Filament: %s" % (enable|lower,detect|lower))}
  {% endif %}

[filament_motion_sensor encoder_sensor]
detection_length: 900           ##changed from 14 on 07-26-22
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
switch_pin: !PG12
#   The pin on which the switch is connected. This parameter must be
#   provided.
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode:
   M117 Filament out
   PAUSE
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
insert_gcode: RESUME
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 5
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
pause_delay: 1
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.


##[filament_switch_sensor filament_sensor]
##switch_pin: !PG12
##pause_on_runout: True
##insert_gcode:
##    { action_respond_info("Insert Detected") }
##runout_gcode:
##    { action_respond_info("Runout Detected") }

[gcode_macro CENTER]
gcode:
  g1 x175 y175

[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------
##	Uncomment below for 250mm build
#mesh_min: 40, 40
#mesh_max: 210,210

##	Uncomment for 300mm build
#mesh_min: 40, 40
#mesh_max: 260,260

##	Uncomment for 350mm build
mesh_min: 40, 40
mesh_max: 310,310
##--------------------------------------------------------------------
fade_start: 0.8
fade_end: 10
probe_count: 5,5
algorithm: bicubic
#relative_reference_index: 12     ##Changed from 12 on 08-14-22
zero_reference_position: 175, 175
mesh_pps: 2, 3
bicubic_tension: 0.2
move_check_distance: 5
split_delta_z: .025

[gcode_macro PRINT_START]
gcode:        
# Parameters
  {% set bedtemp = params.BED|int %}
  {% set hotendtemp = params.EXTRUDER|int %}
  {% set chambertemp = params.CHAMBER|default(0)|int %}
  ##{% set target_offset = params.OFFSET|float %}
  BED_MESH_CLEAR
  SET_GCODE_OFFSET Z=0
  STATUS_HOMING
  G28
  CLEAN_NOZZLE_PARK
  STATUS_CLEANING
  CLEAN_NOZZLE
  STATUS_READY
  G0 Z10
  ##Metric values
  G21
  ## Absolute positioning
  G90 
  ## Set extruder to absolute mode
  M82
  ## Reset feedrate to 100%
  M220 S100
  ## Reset flowrate to 100%
  M221 S100
  M109 S150       ; preheat nozzle to probing temp
  M190 S{bedtemp}
  STATUS_HEATING
  ##G4 P60000       ; optional, let temps settle for 1 min
  G28 Z METHOD=CONTACT CALIBRATE=1    ; calibrate z offset and beacon model hot
  STATUS_LEVELING
  QUAD_GANTRY_LEVEL
  g1 x175 y175
  STATUS_CALIBRATING_Z
  BEACON_AUTO_CALIBRATE
  STATUS_MESHING
  BED_MESH_CALIBRATE RUNS=2           ; bed mesh in scan mode
  G28 Z METHOD=CONTACT CALIBRATE=0    ; calibrate z offset only after tilt/mesh
  CLEAN_NOZZLE_PARK
  STATUS_HEATING
  M104 S{hotendtemp}                    ; set extruder to print temp
  M109 S{hotendtemp}                    ; wait for extruder temp
  CLEAN_NOZZLE
  SET_GCODE_OFFSET Z=-0.0     ; add a little offset for hotend thermal expansion needs fine tuning, long meltzones require more
  ##SET_GCODE_OFFSET Z_ADJUST={z_offset}  ; apply optional material squish via slicer
  Song_startup
  M117 Prime Line ..........
  G92 E0.0            #reset extruder distance position
  G1 X10 Y10 Z0.3 F3000       #move to prime line position
  G1 X60 E10.0 F1000  #intro line
  G1 X200 E30 F500   # intro line
  G92 E0.0      #reset extruder distance position
  G90
  M117 Starting Print .......

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    SET_FAN_SPEED FAN=Nevermore SPEED=0
    SONG_simpsons
    STATUS_READY
    
[gcode_macro M300]
gcode:
	{% set S = params.S|default(1000)|int %}
	{% set P = params.P|default(100)|int %}

		SET_PIN PIN=beep VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
		G4 P{P}
		SET_PIN PIN=beep VALUE=0

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor Octopus_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[gcode_macro PRIME_LINE]
gcode:
  M117 Prime Line
  G92 E0
  G1 Z2.0 F3000
  G1 X185 Y0.2 Z0.28 F5000.0
  G1 X4 Y0.2 Z0.28 F1500.0 E20
  G1 X4 Y0.8 Z0.28 F5000.0
  G1 X185 Y0.8 Z0.28 F1500.0 E40
  # glop loop
  G1 X185 Y3 Z0.28 F3000
  G1 X183 Y3 Z0.28 F3000
  G1 X183 Y1 Z0.28 F3000
  G1 X184.8 Y1 Z0.28 F3000
  G92 E0
  G1 Z2.0 E-1 F3000
  M117 Printing

[gcode_arcs]
resolution: 0.05

[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 305
variable_start_y: 350
variable_start_z: 5.5
variable_wipe_dist: -35          #prior value -50
variable_wipe_qty: 10
variable_wipe_spd: 200
variable_raise_distance: 30      #prior value  30

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 0.125
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 34.725
#*# pid_ki = 1.020
#*# pid_kd = 295.598
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.142
#*# pid_ki = 1.086
#*# pid_kd = 123.233
#*#
#*# [probe]
#*# z_offset = 7.425
#*#
#*# [bed_mesh TPU]
#*# version = 1
#*# points =
#*# 	0.084283, 0.091429, 0.093145, 0.116254, 0.085053
#*# 	0.040828, 0.035809, 0.038075, 0.049653, 0.038217
#*# 	0.018962, 0.008139, 0.000000, 0.020861, 0.001443
#*# 	0.013554, 0.016360, 0.012746, 0.030420, 0.012544
#*# 	0.079240, 0.075111, 0.072612, 0.085053, 0.071606
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh PETG]
#*# version = 1
#*# points =
#*# 	0.073299, 0.082985, 0.084145, 0.107169, 0.079995
#*# 	0.048725, 0.039032, 0.037266, 0.052777, 0.041338
#*# 	0.021284, 0.009027, 0.000000, 0.019067, 0.004302
#*# 	0.032877, 0.024155, 0.016760, 0.033703, 0.018770
#*# 	0.092200, 0.080222, 0.072717, 0.087793, 0.077760
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh ASA]
#*# version = 1
#*# points =
#*# 	0.075978, 0.084230, 0.085165, 0.105633, 0.081266
#*# 	0.050523, 0.039926, 0.038820, 0.054177, 0.045527
#*# 	0.024713, 0.011631, 0.000000, 0.022090, 0.008803
#*# 	0.036721, 0.026163, 0.018435, 0.036086, 0.023139
#*# 	0.096036, 0.082753, 0.075280, 0.088926, 0.081835
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh ABS]
#*# version = 1
#*# points =
#*# 	0.075377, 0.079250, 0.082776, 0.105406, 0.080812
#*# 	0.051127, 0.040164, 0.039018, 0.055134, 0.044970
#*# 	0.024724, 0.011475, 0.000000, 0.021818, 0.009534
#*# 	0.041047, 0.030333, 0.020306, 0.036832, 0.023486
#*# 	0.096976, 0.084961, 0.076464, 0.090152, 0.081509
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [beacon model default]
#*# model_coef = 1.4945159925736429,
#*# 	  1.8394486196074313,
#*# 	  0.8014585574438303,
#*# 	  0.372609485266058,
#*# 	  0.28226914551838045,
#*# 	  0.25737228756384983,
#*# 	  -0.1552617762679498,
#*# 	  -0.24421192200288552,
#*# 	  0.17724978747326622,
#*# 	  0.17766259323311875
#*# model_domain = 1.8537204855828883e-07,1.937760493299399e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 49.640006
#*# model_offset = 0.00000
#*#
#*# [input_shaper]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.017637, 0.050176, 0.066415, 0.047796, 0.007584
#*# 	  -0.003812, 0.021677, 0.047781, 0.011376, 0.006106
#*# 	  -0.023865, -0.004030, 0.000000, -0.011049, -0.018216
#*# 	  -0.007160, 0.010339, 0.024851, 0.001133, 0.001128
#*# 	  0.031774, 0.041006, 0.045331, 0.024781, 0.036193
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
